/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-unused-vars */
//@ts-nocheck
"use client";

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';
import {
  FaSearch, FaBell, FaChevronRight, FaPlay, FaUsers,
  FaClock, FaStar, FaCompass, FaGraduationCap,
  FaRegLightbulb, FaBrain, FaInfinity, FaRandom,
  FaShareAlt, FaRobot, FaHandSparkles, FaMobile,
  FaChartLine, FaHeart, FaBookOpen, FaLightbulb,
  FaArrowUp, FaArrowDown, FaArrowRight, FaCode,
  FaAtom, FaLeaf, FaCogs, FaNetworkWired, FaEye,
  FaSmile, FaSync, FaDollarSign, FaMoneyBillWave,
  FaTrendingUp, FaUserPlus, FaVideo, FaMagic, FaFlask, FaGlobe, FaRocket,
  FaHistory, FaCheck
} from 'react-icons/fa';
import ReelsDeck from '@/components/ReelsDeck';
import { deckReels } from '@/data/deckReels';
import { EXPERT_CONFIGS } from '@/data/experts';
import { sensayAPI } from '@/lib/sensay';

// Problem vs Solution Stats
const problemStats = [
  {
    value: '2.5hrs',
    label: 'Daily Scrolling',
    subtext: 'Wasted on mindless content',
    color: 'text-red-400',
    icon: <FaMobile className="text-lg" />,
    trend: 'negative'
  },
  {
    value: '95%',
    label: 'Feel Guilty',
    subtext: 'After social media binges',
    color: 'text-orange-400',
    icon: <FaHeart className="text-lg" />,
    trend: 'negative'
  },
  {
    value: '8sec',
    label: 'Attention Span',
    subtext: 'Before losing focus',
    color: 'text-yellow-400',
    icon: <FaClock className="text-lg" />,
    trend: 'negative'
  }
];

const solutionStats = [
  {
    value: '340%',
    label: 'Learning Boost',
    subtext: 'vs traditional methods',
    color: 'text-green-400',
    icon: <FaChartLine className="text-lg" />,
    trend: 'positive'
  },
  {
    value: '∞',
    label: 'Fresh Content',
    subtext: 'Generated by AI experts',
    color: 'text-blue-400',
    icon: <FaHandSparkles className="text-lg" />,
    trend: 'positive'
  },
  {
    value: '0%',
    label: 'Guilt Factor',
    subtext: 'Every swipe builds knowledge',
    color: 'text-purple-400',
    icon: <FaSmile className="text-lg" />,
    trend: 'positive'
  }
];

// Magic Formula Components
const magicFormula = [
  {
    title: "Social Media Dopamine",
    description: "Same addictive vertical swipe experience you love",
    icon: <FaHeart className="text-2xl" />,
    color: "from-red-500 to-pink-500"
  },
  {
    title: "Expert AI Personalities",
    description: "Real AI experts trained with Sensay, each with unique teaching style",
    icon: <FaRobot className="text-2xl" />,
    color: "from-purple-500 to-blue-500"
  },
  {
    title: "Micro-Learning Magic",
    description: "Complex topics broken into 60-second digestible pieces",
    icon: <FaMagic className="text-2xl" />,
    color: "from-green-500 to-teal-500"
  }
];

// Creator Economy Stats
const creatorEconomyStats = [
  {
    value: "$47K+",
    label: "Creator Earnings",
    subtext: "Average monthly income",
    color: "text-green-400",
    icon: <FaDollarSign className="text-lg" />
  },
  {
    value: "340+",
    label: "AI Experts Created",
    subtext: "By our community",
    color: "text-blue-400",
    icon: <FaUserPlus className="text-lg" />
  },
  {
    value: "1.2M+",
    label: "Learning Minutes",
    subtext: "Generated monthly",
    color: "text-purple-400",
    icon: <FaVideo className="text-lg" />
  }
];

// Real Expert Examples (using EXPERT_CONFIGS)
const featuredExperts = EXPERT_CONFIGS.map(expert => ({
  ...expert,
  stats: {
    views: Math.floor(Math.random() * 2000000) + 500000,
    subscribers: Math.floor(Math.random() * 50000) + 10000,
    earnings: Math.floor(Math.random() * 3000) + 1000
  },
  icon: expert.domain.includes('Physics') ? <FaAtom className="text-2xl" /> :
    expert.domain.includes('Programming') ? <FaCode className="text-2xl" /> :
      expert.domain.includes('History') ? <FaHistory className="text-2xl" /> :
        expert.domain.includes('Psychology') ? <FaBrain className="text-2xl" /> :
          <FaGlobe className="text-2xl" />
}));

// Content Generation Pipeline
const pipelineSteps = [
  {
    title: "Interest Detection",
    description: "AI notices you spent 45s on quantum physics",
    icon: <FaEye className="text-xl" />,
    color: "from-blue-500 to-blue-600",
    detail: "Advanced engagement tracking"
  },
  {
    title: "Expert Analysis",
    description: "Dr. Quantum (trained AI) analyzes your learning style",
    icon: <FaBrain className="text-xl" />,
    color: "from-purple-500 to-purple-600",
    detail: "Sensay AI processing"
  },
  {
    title: "Content Generation",
    description: "Creates 3 follow-up reels: Basics → Deep Dive → Practice",
    icon: <FaHandSparkles className="text-xl" />,
    color: "from-pink-500 to-pink-600",
    detail: "Personalized learning path"
  },
  {
    title: "Smart Delivery",
    description: "Appears in your feed within seconds",
    icon: <FaRocket className="text-xl" />,
    color: "from-green-500 to-green-600",
    detail: "Real-time personalization"
  }
];

// Navigation patterns explanation
const navigationFeatures = [
  {
    direction: "↕ Vertical Scroll",
    action: "Episode-by-episode learning journey",
    description: "Follow a coherent narrative arc, like binge-watching but for your brain",
    icon: <FaArrowUp className="text-lg" />
  },
  {
    direction: "↔ Horizontal Swipe",
    action: "Alternative expert perspectives",
    description: "Same topic, different teaching style - find what clicks for you",
    icon: <FaArrowRight className="text-lg" />
  },
  {
    direction: "👆 Long Press",
    action: "Join live discussions",
    description: "Connect with other learners and ask questions in real-time",
    icon: <FaUsers className="text-lg" />
  }
];

// Animation variants
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: { staggerChildren: 0.1 }
  }
};

const itemVariants = {
  hidden: { y: 20, opacity: 0 },
  visible: {
    y: 0,
    opacity: 1,
    transition: { type: "spring", stiffness: 100 }
  }
};

export default function EnhancedHomePage() {
  const [isLoaded, setIsLoaded] = useState(false);
  const [currentDemo, setCurrentDemo] = useState(0);
  const [isGenerating, setIsGenerating] = useState(false);
  const [showPipeline, setShowPipeline] = useState(false);
  const [selectedExpert, setSelectedExpert] = useState(0);
  const [showCreatorFlow, setShowCreatorFlow] = useState(false);
  const [activePipelineStep, setActivePipelineStep] = useState(0);

  useEffect(() => {
    const timer = setTimeout(() => setIsLoaded(true), 800);
    return () => clearTimeout(timer);
  }, []);

  // Auto-rotate through experts
  useEffect(() => {
    const interval = setInterval(() => {
      setSelectedExpert((prev) => (prev + 1) % featuredExperts.length);
    }, 4000);
    return () => clearInterval(interval);
  }, []);

  // Auto-animate pipeline
  useEffect(() => {
    if (showPipeline) {
      const interval = setInterval(() => {
        setActivePipelineStep((prev) => (prev + 1) % pipelineSteps.length);
      }, 1500);
      return () => clearInterval(interval);
    }
  }, [showPipeline]);

  const demonstrateGeneration = async () => {
    setIsGenerating(true);
    setShowPipeline(true);

    setTimeout(() => {
      setIsGenerating(false);
    }, 8000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#0c0612] via-[#131019] to-[#1a1522] text-white overflow-x-hidden font-sans">
      {/* Enhanced Animated Background */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <motion.div
          className="absolute w-96 h-96 rounded-full bg-[#8f46c1]/10 blur-3xl"
          animate={{
            x: [0, 100, 0],
            y: [0, 50, 0],
            scale: [1, 1.2, 1]
          }}
          transition={{
            duration: 20,
            repeat: Infinity,
            repeatType: "reverse"
          }}
          style={{ top: '10%', left: '10%' }}
        />
        <motion.div
          className="absolute w-96 h-96 rounded-full bg-[#d56f66]/10 blur-3xl"
          animate={{
            x: [0, -50, 0],
            y: [0, 80, 0],
            scale: [1.2, 1, 1.2]
          }}
          transition={{
            duration: 25,
            repeat: Infinity,
            repeatType: "reverse"
          }}
          style={{ bottom: '10%', right: '10%' }}
        />
        <motion.div
          className="absolute w-64 h-64 rounded-full bg-[#a0459b]/8 blur-3xl"
          animate={{
            x: [0, 30, 0],
            y: [0, -40, 0],
            scale: [0.8, 1.3, 0.8]
          }}
          transition={{
            duration: 18,
            repeat: Infinity,
            repeatType: "reverse"
          }}
          style={{ top: '50%', left: '50%' }}
        />
      </div>

      {/* Header */}
      <motion.header
        className="relative z-10 px-6 py-4 flex justify-between items-center"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
      >
        <div className="flex items-center">
          <motion.div
            className="w-12 h-12 bg-gradient-to-tr from-[#8f46c1] to-[#d56f66] rounded-full flex items-center justify-center shadow-lg"
            whileHover={{ scale: 1.05, rotate: 5 }}
            whileTap={{ scale: 0.95 }}
          >
            <span className="text-xl font-bold">M</span>
          </motion.div>
          <div className="ml-3">
            <h1 className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#8f46c1] to-[#d56f66] hidden md:block">
              MentorScroll
            </h1>
            <p className="text-xs text-white/60 hidden md:block">
              Powered by Sensay AI
            </p>
          </div>
        </div>

        <div className="flex items-center space-x-4">
          <motion.div
            className="px-3 py-1 bg-gradient-to-r from-purple-600/30 to-pink-600/30 rounded-full border border-purple-500/40 backdrop-blur-sm"
            animate={{
              boxShadow: [
                "0 0 0 0 rgba(147, 51, 234, 0)",
                "0 0 0 8px rgba(147, 51, 234, 0.1)",
                "0 0 0 0 rgba(147, 51, 234, 0)"
              ]
            }}
            transition={{ duration: 2, repeat: Infinity }}
          >
            <span className="text-xs font-medium text-purple-200">🏆 Sensay EdTech Hackathon</span>
          </motion.div>

          <motion.button
            className="px-4 py-2 bg-gradient-to-r from-[#8f46c1] to-[#d56f66] rounded-full text-sm font-medium shadow-lg"
            whileHover={{ scale: 1.05, boxShadow: "0 8px 25px -8px rgba(143, 70, 193, 0.6)" }}
            whileTap={{ scale: 0.95 }}
            onClick={demonstrateGeneration}
            disabled={isGenerating}
          >
            {isGenerating ? (
              <div className="flex items-center">
                <motion.div
                  className="w-4 h-4 border-2 border-white/30 border-t-white rounded-full mr-2"
                  animate={{ rotate: 360 }}
                  transition={{ repeat: Infinity, duration: 1, ease: "linear" }}
                />
                Generating...
              </div>
            ) : (
              <>
                <FaHandSparkles className="inline mr-2" />
                See AI Magic
              </>
            )}
          </motion.button>
        </div>
      </motion.header>

      <main className="relative z-10 px-6">
        {/* Revolutionary Solution Hero */}
        <motion.section
          className="mb-20 max-w-7xl mx-auto"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.4 }}
        >
          <div className="text-center mb-16">
            <motion.div
              className="mb-8"
              initial={{ y: 30, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ delay: 0.6 }}
            >
              <span className="inline-block px-6 py-2 bg-gradient-to-r from-red-500/20 to-orange-500/20 text-red-300 rounded-full text-sm font-medium mb-6 border border-red-500/30">
                🚨 The Problem: 2.5 Hours Daily of Mindless Scrolling
              </span>

              <h2 className="text-5xl md:text-7xl font-bold mb-6 leading-tight">
                <span className="block mb-3">
                  Revolutionary Solution
                </span>
                <span className="bg-clip-text text-transparent bg-gradient-to-r from-[#8f46c1] via-[#d56f66] to-[#f59e0b]">
                  Learning Without Knowing
                </span>
              </h2>

              <motion.div
                className="text-2xl md:text-3xl font-bold text-white/90 mb-8"
                initial={{ scale: 0.9, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 1 }}
              >
                Core Philosophy: <span className="text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-400">"You're Learning"</span>
              </motion.div>
            </motion.div>

            {/* The Magic Formula */}
            <motion.div
              className="mb-16"
              initial={{ y: 30, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ delay: 1.2 }}
            >
              <div className="bg-gradient-to-br from-gray-900/50 to-gray-800/50 rounded-2xl p-8 border border-white/10 backdrop-blur-sm">
                <h3 className="text-2xl font-bold mb-6 text-center">
                  🧪 The Magic Formula
                </h3>

                <div className="flex flex-col md:flex-row items-center justify-center space-y-4 md:space-y-0 md:space-x-8 mb-8">
                  {magicFormula.map((component, i) => (
                    <React.Fragment key={i}>
                      <motion.div
                        className="text-center"
                        initial={{ scale: 0.8, opacity: 0 }}
                        animate={{ scale: 1, opacity: 1 }}
                        transition={{ delay: 1.4 + i * 0.2 }}
                        whileHover={{ scale: 1.05 }}
                      >
                        <div className={`w-16 h-16 rounded-full bg-gradient-to-r ${component.color} flex items-center justify-center mb-3 mx-auto shadow-lg`}>
                          {component.icon}
                        </div>
                        <h4 className="font-bold text-white mb-2">{component.title}</h4>
                        <p className="text-sm text-white/70 max-w-32">{component.description}</p>
                      </motion.div>

                      {i < magicFormula.length - 1 && (
                        <motion.div
                          className="text-3xl font-bold text-white/40 hidden md:block"
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          transition={{ delay: 1.6 + i * 0.2 }}
                        >
                          +
                        </motion.div>
                      )}
                    </React.Fragment>
                  ))}
                </div>

                <motion.div
                  className="text-center"
                  initial={{ y: 20, opacity: 0 }}
                  animate={{ y: 0, opacity: 1 }}
                  transition={{ delay: 2.2 }}
                >
                  <div className="text-3xl font-bold mb-2">=</div>
                  <div className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-400">
                    Guilt-Free Growth
                  </div>
                  <p className="text-white/70 mt-2">
                    Instead of fighting scroll addiction, we <strong>harness it for good</strong>
                  </p>
                </motion.div>
              </div>
            </motion.div>

            {/* Before vs After Stats */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16">
              {/* Problem Stats */}
              <motion.div
                className="bg-gradient-to-br from-red-900/30 to-orange-900/30 rounded-2xl p-8 border border-red-500/30"
                initial={{ x: -50, opacity: 0 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{ delay: 1.4 }}
              >
                <h3 className="text-xl font-bold text-red-300 mb-6 text-center">😤 The Problem</h3>
                <div className="space-y-4">
                  {problemStats.map((stat, i) => (
                    <motion.div
                      key={i}
                      className="flex items-center space-x-4 bg-white/5 rounded-lg p-4"
                      initial={{ x: -20, opacity: 0 }}
                      animate={{ x: 0, opacity: 1 }}
                      transition={{ delay: 1.6 + i * 0.1 }}
                    >
                      <div className="w-12 h-12 rounded-full bg-white/10 flex items-center justify-center">
                        {stat.icon}
                      </div>
                      <div className="flex-1">
                        <div className={`text-2xl font-bold ${stat.color}`}>{stat.value}</div>
                        <div className="text-white font-medium">{stat.label}</div>
                        <div className="text-white/60 text-sm">{stat.subtext}</div>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              {/* Solution Stats */}
              <motion.div
                className="bg-gradient-to-br from-green-900/30 to-blue-900/30 rounded-2xl p-8 border border-green-500/30"
                initial={{ x: 50, opacity: 0 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{ delay: 1.4 }}
              >
                <h3 className="text-xl font-bold text-green-300 mb-6 text-center">✨ Our Solution</h3>
                <div className="space-y-4">
                  {solutionStats.map((stat, i) => (
                    <motion.div
                      key={i}
                      className="flex items-center space-x-4 bg-white/5 rounded-lg p-4"
                      initial={{ x: 20, opacity: 0 }}
                      animate={{ x: 0, opacity: 1 }}
                      transition={{ delay: 1.6 + i * 0.1 }}
                    >
                      <div className="w-12 h-12 rounded-full bg-white/10 flex items-center justify-center">
                        {stat.icon}
                      </div>
                      <div className="flex-1">
                        <div className={`text-2xl font-bold ${stat.color}`}>{stat.value}</div>
                        <div className="text-white font-medium">{stat.label}</div>
                        <div className="text-white/60 text-sm">{stat.subtext}</div>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            </div>
          </div>
        </motion.section>

        {/* Live Demo Section */}
        <motion.section
          className="mb-20 max-w-6xl mx-auto"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          <div className="text-center mb-12">
            <h3 className="text-3xl font-bold mb-4">
              Experience It Yourself
            </h3>
            <p className="text-white/70 text-lg max-w-2xl mx-auto">
              Try our AI experts trained with Sensay - swipe, learn, and feel your brain getting smarter
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            {/* Demo Phone */}
            <div className="relative">
              <motion.div
                className="relative mx-auto max-w-sm"
                initial={{ y: 50, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ delay: 1 }}
              >
                <div className="relative bg-black rounded-[2.5rem] p-4 shadow-2xl border-4 border-gray-800">
                  <div className="bg-gradient-to-br from-[#0c0612] to-[#1a1522] rounded-[2rem] p-6 h-[600px] overflow-hidden">
                    <div className="relative h-full">
                      <ReelsDeck reels={deckReels} initialIndex={0} />

                      {/* Navigation indicators */}
                      <div className="absolute inset-0 pointer-events-none">
                        <motion.div
                          className="absolute left-1/2 top-4 transform -translate-x-1/2 w-8 h-8 rounded-full bg-white/10 flex items-center justify-center"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ duration: 2, repeat: Infinity }}
                        >
                          <FaArrowUp className="text-xs text-white/80" />
                        </motion.div>

                        <motion.div
                          className="absolute right-4 top-1/2 transform -translate-y-1/2 w-8 h-8 rounded-full bg-white/10 flex items-center justify-center"
                          animate={{ x: [0, 5, 0] }}
                          transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}
                        >
                          <FaArrowRight className="text-xs text-white/80" />
                        </motion.div>

                        <motion.div
                          className="absolute left-1/2 bottom-4 transform -translate-x-1/2 w-8 h-8 rounded-full bg-white/10 flex items-center justify-center"
                          animate={{ y: [0, 5, 0] }}
                          transition={{ duration: 2, repeat: Infinity, delay: 1 }}
                        >
                          <FaArrowDown className="text-xs text-white/80" />
                        </motion.div>
                      </div>
                    </div>
                  </div>
                </div>
              </motion.div>
            </div>

            {/* Navigation Features */}
            <div className="space-y-6">
              <h4 className="text-2xl font-bold mb-6">Smart Multi-Dimensional Navigation</h4>
              {navigationFeatures.map((feature, i) => (
                <motion.div
                  key={i}
                  className="bg-white/5 rounded-xl p-6 border border-white/10"
                  initial={{ x: 50, opacity: 0 }}
                  animate={{ x: 0, opacity: 1 }}
                  transition={{ delay: 1.2 + i * 0.2 }}
                  whileHover={{ backgroundColor: "rgba(255,255,255,0.1)", x: 10 }}
                >
                  <div className="flex items-start space-x-4">
                    <div className="w-12 h-12 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center flex-shrink-0">
                      {feature.icon}
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <span className="text-2xl font-mono font-bold text-purple-300">{feature.direction}</span>
                        <span className="text-white font-semibold">{feature.action}</span>
                      </div>
                      <p className="text-white/70 text-sm">{feature.description}</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </motion.section>

        {/* AI Content Generation Pipeline */}
        <AnimatePresence>
          {showPipeline && (
            <motion.section
              className="mb-20 max-w-6xl mx-auto"
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -50 }}
            >
              <div className="text-center mb-12">
                <h3 className="text-3xl font-bold mb-4">Real-Time AI Content Generation</h3>
                <p className="text-white/70 text-lg">Watch how Sensay creates personalized learning paths instantly</p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
                {pipelineSteps.map((step, i) => (
                  <motion.div
                    key={i}
                    className={`relative bg-gradient-to-br ${step.color} bg-opacity-20 rounded-xl p-6 border border-white/10 ${activePipelineStep === i ? 'ring-2 ring-white/30' : ''
                      }`}
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: i * 0.3 }}
                  >
                    <div className="w-12 h-12 rounded-full bg-white/10 flex items-center justify-center mb-4 mx-auto">
                      {step.icon}
                    </div>
                    <h4 className="font-bold text-white text-center mb-2">{step.title}</h4>
                    <p className="text-white/70 text-sm text-center mb-3">{step.description}</p>
                    <div className="text-xs text-center text-white/50">{step.detail}</div>

                    {activePipelineStep === i && (
                      <motion.div
                        className="absolute -top-2 -right-2 w-4 h-4 bg-green-400 rounded-full"
                        initial={{ scale: 0 }}
                        animate={{ scale: [0, 1.3, 1] }}
                        transition={{ duration: 0.5 }}
                      />
                    )}

                    <motion.div
                      className="absolute bottom-2 left-2 right-2 h-1 bg-white/20 rounded-full overflow-hidden"
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ delay: i * 0.3 + 0.5 }}
                    >
                      <motion.div
                        className="h-full bg-white/60 rounded-full"
                        initial={{ width: "0%" }}
                        animate={{ width: activePipelineStep >= i ? "100%" : "30%" }}
                        transition={{ duration: 1 }}
                      />
                    </motion.div>
                  </motion.div>
                ))}
              </div>
            </motion.section>
          )}
        </AnimatePresence>

        {/* Trained AI Experts Showcase */}
        <motion.section
          className="mb-20 max-w-6xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          <motion.div
            variants={itemVariants}
            className="text-center mb-12"
          >
            <h3 className="text-3xl font-bold mb-4">Meet Our AI Experts</h3>
            <p className="text-white/70 text-lg max-w-2xl mx-auto">
              Each expert is a trained Sensay AI replica with unique personality, teaching style, and specialized knowledge
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredExperts.map((expert, i) => (
              <motion.div
                key={expert.slug}
                variants={itemVariants}
                className="bg-gradient-to-br from-white/10 to-white/5 rounded-2xl p-6 border border-white/10 relative overflow-hidden group cursor-pointer"
                whileHover={{
                  y: -10,
                  boxShadow: "0 20px 40px -10px rgba(0, 0, 0, 0.4)",
                  backgroundColor: "rgba(255, 255, 255, 0.15)"
                }}
              >
                <div className="relative z-10">
                  <div className="flex items-center mb-4">
                    <div className="w-14 h-14 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center mr-4">
                      {expert.icon}
                    </div>
                    <div>
                      <h4 className="font-bold text-white">{expert.name}</h4>
                      <p className="text-white/60 text-sm">{expert.domain}</p>
                    </div>
                  </div>

                  <div className="bg-white/5 rounded-lg p-3 mb-4">
                    <p className="text-white/80 text-sm italic">"{expert.shortDescription}"</p>
                  </div>

                  <div className="mb-4">
                    <p className="text-white/70 text-sm mb-2">Sample Topic:</p>
                    <p className="text-white font-medium text-sm">{expert.sampleTopics[0]}</p>
                  </div>

                  <div className="grid grid-cols-3 gap-2 text-center text-xs">
                    <div className="bg-blue-500/20 rounded-lg p-2">
                      <p className="text-blue-300 font-bold">{(expert.stats.views / 1000000).toFixed(1)}M</p>
                      <p className="text-white/60">Views</p>
                    </div>
                    <div className="bg-purple-500/20 rounded-lg p-2">
                      <p className="text-purple-300 font-bold">{(expert.stats.subscribers / 1000).toFixed(1)}K</p>
                      <p className="text-white/60">Learners</p>
                    </div>
                    <div className="bg-green-500/20 rounded-lg p-2">
                      <p className="text-green-300 font-bold">4.9★</p>
                      <p className="text-white/60">Rating</p>
                    </div>
                  </div>
                </div>

                <div className="absolute top-4 right-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs px-2 py-1 rounded-full">
                  <FaRobot className="inline mr-1" />
                  Sensay AI
                </div>

                <motion.div
                  className="absolute inset-0 bg-gradient-to-r from-purple-500/10 to-pink-500/10 opacity-0 group-hover:opacity-100"
                  initial={{ x: "-100%" }}
                  whileHover={{ x: "100%" }}
                  transition={{ duration: 0.6 }}
                />
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Creator Economy Section */}
        <motion.section
          className="mb-20 max-w-6xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          <motion.div
            variants={itemVariants}
            className="text-center mb-12"
          >
            <span className="inline-block px-6 py-2 bg-gradient-to-r from-green-500/20 to-emerald-500/20 text-green-300 rounded-full text-sm font-medium mb-6 border border-green-500/30">
              💰 Creator Economy Revolution
            </span>
            <h3 className="text-4xl font-bold mb-4">
              Create Your Own AI Expert & Earn
            </h3>
            <p className="text-white/70 text-lg max-w-3xl mx-auto">
              Train your personalized AI expert using Sensay, create engaging educational content,
              and earn passive income from every view, interaction, and subscription.
            </p>
          </motion.div>

          {/* Creator Economy Stats */}
          <motion.div
            className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12"
            variants={containerVariants}
          >
            {creatorEconomyStats.map((stat, i) => (
              <motion.div
                key={i}
                variants={itemVariants}
                className="bg-gradient-to-br from-green-900/30 to-emerald-900/30 rounded-xl p-6 border border-green-500/30 text-center"
                whileHover={{ y: -5, backgroundColor: "rgba(34, 197, 94, 0.2)" }}
              >
                <div className="w-16 h-16 rounded-full bg-green-500/20 flex items-center justify-center mx-auto mb-4">
                  {stat.icon}
                </div>
                <div className={`text-3xl font-bold ${stat.color} mb-2`}>{stat.value}</div>
                <div className="text-white font-medium mb-1">{stat.label}</div>
                <div className="text-white/60 text-sm">{stat.subtext}</div>
              </motion.div>
            ))}
          </motion.div>

          {/* Creator Flow */}
          <motion.div
            className="bg-gradient-to-br from-gray-900/50 to-gray-800/50 rounded-2xl p-8 border border-white/10"
            variants={itemVariants}
          >
            <h4 className="text-2xl font-bold text-center mb-8">
              How Creator Economy Works
            </h4>

            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              {[
                {
                  step: "1",
                  title: "Train Your AI",
                  description: "Upload your knowledge, teaching style, and expertise to Sensay",
                  icon: <FaRobot className="text-xl" />,
                  color: "from-purple-500 to-blue-500"
                },
                {
                  step: "2",
                  title: "AI Creates Content",
                  description: "Your expert generates endless educational reels automatically",
                  icon: <FaVideo className="text-xl" />,
                  color: "from-blue-500 to-green-500"
                },
                {
                  step: "3",
                  title: "Users Learn",
                  description: "Learners discover and engage with your expert's content",
                  icon: <FaUsers className="text-xl" />,
                  color: "from-green-500 to-yellow-500"
                },
                {
                  step: "4",
                  title: "You Earn",
                  description: "Get paid based on views, engagement, and learning outcomes",
                  icon: <FaDollarSign className="text-xl" />,
                  color: "from-yellow-500 to-green-500"
                }
              ].map((item, i) => (
                <motion.div
                  key={i}
                  className="text-center relative"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: i * 0.2 }}
                >
                  <div className={`w-16 h-16 rounded-full bg-gradient-to-r ${item.color} flex items-center justify-center mx-auto mb-4 shadow-lg`}>
                    {item.icon}
                  </div>
                  <div className="absolute -top-2 -right-2 w-6 h-6 bg-white text-black rounded-full flex items-center justify-center text-sm font-bold">
                    {item.step}
                  </div>
                  <h5 className="font-bold text-white mb-2">{item.title}</h5>
                  <p className="text-white/70 text-sm">{item.description}</p>

                  {i < 3 && (
                    <motion.div
                      className="hidden md:block absolute top-8 -right-6 text-white/30"
                      initial={{ opacity: 0, x: -10 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: i * 0.2 + 0.5 }}
                    >
                      <FaArrowRight />
                    </motion.div>
                  )}
                </motion.div>
              ))}
            </div>

            <div className="text-center mt-8">
              <Link href="/create">
                <motion.button
                  className="px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full font-semibold text-white text-lg shadow-lg"
                  whileHover={{ scale: 1.05, boxShadow: "0 15px 30px -10px rgba(34, 197, 94, 0.5)" }}
                  whileTap={{ scale: 0.98 }}
                >
                  <FaRobot className="inline mr-2" />
                  Create Your AI Expert Now
                </motion.button>
              </Link>
            </div>
          </motion.div>
        </motion.section>

        {/* Success Stories */}
        <motion.section
          className="mb-20 max-w-6xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          <motion.div
            variants={itemVariants}
            className="text-center mb-12"
          >
            <h3 className="text-3xl font-bold mb-4">Creator Success Stories</h3>
            <p className="text-white/70 text-lg">Real creators earning real money by teaching with AI</p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                name: "Dr. Sarah Chen",
                expertise: "Quantum Computing Simplified",
                earnings: "$3,247/mo",
                growth: "+284%",
                avatar: "SC",
                testimonial: "My AI expert teaches quantum physics 24/7 while I sleep. Best decision ever!",
                stats: { subscribers: "12.4K", retention: "89%" }
              },
              {
                name: "Chef Antonio",
                expertise: "Italian Cooking Mastery",
                earnings: "$2,156/mo",
                growth: "+195%",
                avatar: "CA",
                testimonial: "Students learn traditional recipes from my AI while I focus on creating new content.",
                stats: { subscribers: "8.9K", retention: "94%" }
              },
              {
                name: "Maya Wellness",
                expertise: "Mental Health & Mindfulness",
                earnings: "$4,023/mo",
                growth: "+312%",
                avatar: "MW",
                testimonial: "My AI provides 1-on-1 mental health guidance to thousands. It's life-changing.",
                stats: { subscribers: "15.2K", retention: "96%" }
              }
            ].map((creator, i) => (
              <motion.div
                key={i}
                variants={itemVariants}
                className="bg-gradient-to-br from-white/10 to-white/5 rounded-2xl p-6 border border-white/10 relative"
                whileHover={{ y: -5, backgroundColor: "rgba(255,255,255,0.15)" }}
              >
                <div className="flex items-center mb-4">
                  <div className="w-12 h-12 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center mr-3 text-sm font-bold">
                    {creator.avatar}
                  </div>
                  <div>
                    <h4 className="font-bold text-white">{creator.name}</h4>
                    <p className="text-white/60 text-sm">{creator.expertise}</p>
                  </div>
                </div>

                <blockquote className="text-white/80 italic text-sm mb-4 bg-white/5 rounded-lg p-3">
                  "{creator.testimonial}"
                </blockquote>

                <div className="grid grid-cols-2 gap-4 mb-4">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-green-400">{creator.earnings}</div>
                    <div className="text-xs text-white/60">Monthly Revenue</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-blue-400">{creator.growth}</div>
                    <div className="text-xs text-white/60">Growth Rate</div>
                  </div>
                </div>

                <div className="flex justify-between text-xs text-white/60">
                  <span>{creator.stats.subscribers} subscribers</span>
                  <span>{creator.stats.retention} retention</span>
                </div>

                <div className="absolute top-4 right-4 bg-green-500/20 text-green-300 px-2 py-1 rounded-full text-xs">
                  <FaCheck className="inline mr-1" />
                  Verified Creator
                </div>
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Call to Action */}
        <motion.section
          className="mb-24 text-center max-w-4xl mx-auto"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 2 }}
        >
          <motion.div
            className="bg-gradient-to-br from-[#0c0612] to-[#1a1522] rounded-3xl p-12 border border-white/10 relative overflow-hidden"
            whileHover={{ scale: 1.02 }}
          >
            <div className="absolute inset-0 bg-gradient-to-r from-purple-500/10 to-pink-500/10 opacity-50" />
            <div className="relative z-10">
              <h2 className="text-4xl md:text-5xl font-bold mb-6">
                Ready to Transform Your
                <span className="bg-clip-text text-transparent bg-gradient-to-r from-[#8f46c1] to-[#d56f66]"> Daily Scrolling?</span>
              </h2>
              <p className="text-xl text-white/70 mb-8 max-w-2xl mx-auto">
                Experience the future of learning with AI experts that make every swipe count towards your growth
              </p>

              <div className="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-6 justify-center items-center">
                <Link href="/feed">
                  <motion.button
                    className="px-10 py-4 bg-gradient-to-r from-[#8f46c1] to-[#d56f66] rounded-full text-white font-semibold text-lg shadow-lg"
                    whileHover={{ scale: 1.05, boxShadow: "0 15px 40px -10px rgba(143, 70, 193, 0.6)" }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <FaPlay className="inline mr-2" />
                    Start Learning Journey
                  </motion.button>
                </Link>

                <Link href="/create">
                  <motion.button
                    className="px-10 py-4 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full text-white font-semibold text-lg shadow-lg"
                    whileHover={{ scale: 1.05, boxShadow: "0 15px 40px -10px rgba(34, 197, 94, 0.6)" }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <FaRobot className="inline mr-2" />
                    Create AI Expert
                  </motion.button>
                </Link>
              </div>

              <div className="mt-6 text-white/60 text-sm">
                <div className="flex items-center justify-center space-x-2">
                  <FaRobot className="text-purple-400" />
                  <span>Powered by Sensay AI • Zero Guilt Learning • Real Creator Economy</span>
                </div>
              </div>
            </div>
          </motion.div>
        </motion.section>
      </main>

      {/* Enhanced Navigation */}
      <motion.nav
        className="fixed bottom-0 inset-x-0 h-16 bg-black/40 backdrop-blur-md border-t border-white/10 flex items-center justify-around z-20"
        initial={{ y: 100 }}
        animate={{ y: 0 }}
        transition={{ delay: 1.2, type: "spring" }}
      >
        <Link href="/">
          <motion.div
            className="flex flex-col items-center text-white"
            whileHover={{ scale: 1.1, color: "#d56f66" }}
            whileTap={{ scale: 0.95 }}
          >
            <FaBookOpen className="text-xl mb-1" />
            <span className="text-xs">Home</span>
          </motion.div>
        </Link>

        <Link href="/feed">
          <motion.div
            className="flex flex-col items-center text-white/70"
            whileHover={{ scale: 1.1, color: "#d56f66" }}
            whileTap={{ scale: 0.95 }}
          >
            <FaBrain className="text-xl mb-1" />
            <span className="text-xs">Learn</span>
          </motion.div>
        </Link>

        <Link href="/create">
          <motion.div
            className="w-14 h-14 bg-gradient-to-r from-[#8f46c1] to-[#d56f66] rounded-full flex items-center justify-center -mt-6 shadow-lg"
            whileHover={{ scale: 1.1, boxShadow: "0 15px 30px -10px rgba(143, 70, 193, 0.6)" }}
            whileTap={{ scale: 0.95 }}
          >
            <FaHandSparkles className="text-xl" />
          </motion.div>
        </Link>

        <Link href="/explore">
          <motion.div
            className="flex flex-col items-center text-white/70"
            whileHover={{ scale: 1.1, color: "#d56f66" }}
            whileTap={{ scale: 0.95 }}
          >
            <FaLightbulb className="text-xl mb-1" />
            <span className="text-xs">Explore</span>
          </motion.div>
        </Link>

        <Link href="/profile">
          <motion.div
            className="flex flex-col items-center text-white/70"
            whileHover={{ scale: 1.1, color: "#d56f66" }}
            whileTap={{ scale: 0.95 }}
          >
            <FaUsers className="text-xl mb-1" />
            <span className="text-xs">Profile</span>
          </motion.div>
        </Link>
      </motion.nav>
    </div>
  );
}